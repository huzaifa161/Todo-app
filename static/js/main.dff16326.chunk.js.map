{"version":3,"sources":["AddTodo.js","TodoList.js","EditTodo.js","App.js","index.js"],"names":["AddTodo","addTodo","removeTodo","useState","todo","setTodo","error","setError","className","placeholder","type","value","onChange","e","target","onClick","TodoList","todos","onEditChange","setValue","setIndex","length","map","index","key","bool","editChange","icon","faEdit","faTrash","EditTodo","isEdit","editValue","onTodoUpdate","style","transform","App","initState","localStorage","getItem","JSON","parse","setTodos","setIsEdit","newTodos","splice","useEffect","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dff16326.chunk.js","sourcesContent":["import React, { useState     } from 'react';\r\nconst AddTodo = ({ addTodo, removeTodo}) => {\r\n    const [todo, setTodo] = useState('');\r\n    const [error, setError] = useState('')\r\n\r\n    const onAddTodo = () => {\r\n        if (!todo) return setError('Please Enter Todo');\r\n        addTodo(todo);\r\n        setTodo('')\r\n    }\r\n\r\n    const onTodoChange = (e) => {\r\n        setTodo(e.target.value);\r\n        setError('');\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='form__group'>\r\n                <input placeholder='What do you want to add?' className='form__group-input' type='text' value={todo} onChange={onTodoChange} />\r\n                <button onClick={onAddTodo} className='form__group-button'>Add Todo</button>\r\n            </div>\r\n            {error && <div className='error'>{error}</div>}\r\n        </div>\r\n    )\r\n};\r\nexport default AddTodo;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nconst TodoList = ({ todos, removeTodo, onEditChange, setValue, setIndex }) => {\r\n\r\n    const editChange = (bool, index) => {\r\n        onEditChange(bool);\r\n        setValue(todos[index]);\r\n        setIndex(index);\r\n    }\r\n    return (\r\n        <div className='todo-list'>\r\n            <h2 className='todo-list-heading'>Todos</h2>\r\n            {!todos.length ? <div className='empty'>List is Empty</div>\r\n                : todos.map((todo, index) => (\r\n                    <div className='todo-item' key={index}>\r\n                        <div className='todo-item-value'>{index + 1} ) {todo}</div>\r\n                        <div className='button__group'>\r\n                            <span onClick={() => editChange(true,index)} className='button__group-edit'><FontAwesomeIcon icon={faEdit} /></span>\r\n                            <span onClick={() => removeTodo(index)} className='button__group-delete'><FontAwesomeIcon icon={faTrash} /></span>\r\n                        </div>                    \r\n                    </div>\r\n                ))}\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default TodoList;","import React, { useState, memo } from 'react';\r\n\r\n\r\nconst EditTodo = ({ isEdit, editValue, index, onTodoUpdate }) => {\r\n    const [value, setValue] = useState('');\r\n    const onValueChange = e => setValue(e.target.value);\r\n    return isEdit ? (\r\n        <div style={{\r\n            transform: isEdit ? 'scale(1)' : 'scale(0)'\r\n        }} className='edit__todo'>\r\n            <div className='form__group'>\r\n                <input placeholder='What do you want to add?' className='form__group-input'\r\n                    type='text' value={value || editValue} onChange={onValueChange} />\r\n                <button onClick={() => onTodoUpdate(value,index)} className='form__group-button'>Edit</button>\r\n            </div>\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\nexport default EditTodo;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport AddTodo from './AddTodo';\nimport TodoList from './TodoList';\nimport EditTodo from './EditTodo';\nconst App = () => {\n\n\n  const initState = localStorage.getItem('todos');\n  const [todos, setTodos] = useState(initState === null ? [] : JSON.parse(initState));\n  const [isEdit, setIsEdit] = useState(null);\n  const [value, setValue] = useState('');\n  const [index, setIndex] = useState(null);\n  const onEditChange = (bool) => setIsEdit(bool);\n  \n  const onTodoUpdate = (value, index) => {\n    const newTodos = [...todos];\n    newTodos[index] = value;\n    setTodos(newTodos);\n    setIsEdit(false);\n  }\n  const addTodo = todo => {\n    if (!todo) return;\n    setTodos([...todos, todo]);\n  }\n\n  const removeTodo = index => {\n    let newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos([...newTodos]);\n  }\n\n  useEffect(() => {\n    localStorage.setItem('todos',JSON.stringify(todos));\n  },[todos])\n  return (\n    <div className=\"App\">\n      <AddTodo addTodo={addTodo} removeTodo={removeTodo}/>\n      <TodoList\n        setIndex={setIndex}\n        setValue={setValue} onEditChange={onEditChange} todos={todos} removeTodo={removeTodo} />\n     <EditTodo onTodoUpdate={onTodoUpdate} index={index} editValue={value} isEdit={isEdit} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}